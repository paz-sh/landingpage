{
  "name": "rework-custom-media",
  "version": "0.2.0",
  "description": "W3C-style custom media queries for Rework",
  "files": [
    "index.js"
  ],
  "devDependencies": {
    "mocha": "^1.21.0",
    "rework": "^1.0.0"
  },
  "scripts": {
    "test": "mocha --no-colors",
    "test-watch": "mocha --slow 30 --reporter spec --watch"
  },
  "keywords": [
    "css",
    "custom-media",
    "rework",
    "media-queries",
    "media-query",
    "preprocessor",
    "rework-plugin"
  ],
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/reworkcss/rework-custom-media.git"
  },
  "readme": "# rework-custom-media [![Build Status](https://travis-ci.org/reworkcss/rework-custom-media.png)](https://travis-ci.org/reworkcss/rework-custom-media)\n\nA [Rework](https://github.com/reworkcss/rework) (`>=1.0.0`) plugin to add support for the\n[W3C-style CSS Custom Media Queries](http://dev.w3.org/csswg/mediaqueries/#custom-mq) syntax.\n\n## Installation\n\n```\nnpm install rework-custom-media\n```\n\n## Use\n\nAs a Rework plugin:\n\n```js\n// dependencies\nvar fs = require('fs');\nvar rework = require('rework');\nvar media = require('rework-custom-media');\n\n// css to be processed\nvar css = fs.readFileSync('build/build.css', 'utf8').toString();\n\n// process css using rework-custom-media\ncss = rework(css).use(media()).toString();\n```\n\n## Options\n\n### map\n\nOptionally, you may define the `<media-query-list>` for each `<extension-name>`\nin a JavaScript object that is passed to the function.\n\n```js\nvar options = {\n  map: {\n    '--wide-screen': 'screen and (min-width:900px)'\n  }\n}\n\nvar out = rework(css).use(media(options)).toString();\n```\n\n## CSS syntax\n\nA custom media query is defined with the `@custom-media` rule. Its scope is\nglobal.\n\n```css\n@custom-media <extension-name> <media-query-list>;\n```\n\nThis defines that the custom media query named by the `<extension-name>`\nrepresents the given `<media-query-list>`.\n\nThe `<extension-name>` can then be used in a media feature. The alias must be\nwrapped in parentheses.\n\n```css\n@custom-media --narrow-window screen and (max-width: 30em);\n\n@media (--narrow-window) {\n  /* narrow window styles */\n}\n```\n\nIf an undefined `<extension-name>` is used by a media feature, the media\nfeature will be stripped from the output, and a warning will be logged to the\nconsole.\n\n## License\n\nMIT\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/reworkcss/rework-custom-media/issues"
  },
  "homepage": "https://github.com/reworkcss/rework-custom-media",
  "_id": "rework-custom-media@0.2.0",
  "_shasum": "fd42516377350c4229d6a5fd7f66032d1f3d16e7",
  "_from": "rework-custom-media@^0.2.0",
  "_resolved": "https://registry.npmjs.org/rework-custom-media/-/rework-custom-media-0.2.0.tgz"
}
